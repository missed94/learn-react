{"version":3,"sources":["components/common/FormsControls/FormControls.js","utils/validators/validators.js","components/common/FormsControls/FormControls.module.scss","components/Login/LoginForm/LoginForm.module.scss","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["FormControls","Element","input","meta","props","hasError","touched","error","className","classes","formControl","errorMessage","Textarea","Input","required","value","maxLengthCreator","maxLength","length","module","exports","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","loginFormComponent","login__form","onSubmit","Field","type","name","placeholder","component","captcha__wrapper","src","alt","form__summaryError","connect","state","isAuth","auth","login","to","loginComponent","formData","email","password","rememberMe","captcha"],"mappings":"0NAIMA,EAAe,SAAAC,GAAO,OAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACnDC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UACDH,EAAQ,UACCI,IAAQC,YADT,YACwBD,IAAQF,OADhC,UAECE,IAAQC,cAGjB,6BACI,kBAACT,EAAD,iBAAaC,EAAWE,KAE3BC,EACK,uBAAGG,UAAWC,IAAQE,cAAeR,EAAKI,OAC1C,QAOLK,EAAWZ,EAAa,YACxBa,EAAQb,EAAa,U,iCC1BlC,oEAAO,IAAMc,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCL3CE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,aAAe,qC,0CCArHD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,mBAAqB,wC,2HC+DrEC,G,OAJQC,YAAU,CAC7BC,KAAM,SADaD,EArDL,SAAC,GAAuC,IAAtCf,EAAqC,EAArCA,MAAOiB,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WACrC,OACI,yBAAKjB,UAAWC,IAAQiB,oBACpB,0BAAMlB,UAAWC,IAAQkB,YAAaC,SAAUJ,GAC5C,6BACI,kBAACK,EAAA,EAAD,CACIC,KAAK,OACLC,KAAM,QACNC,YAAa,QACbC,UAAWpB,OAGnB,6BACI,kBAACgB,EAAA,EAAD,CACIC,KAAK,WACLC,KAAM,WACNC,YAAa,WACbC,UAAWpB,OAInB,+BACI,kBAACgB,EAAA,EAAD,CACII,UAAW,QACXH,KAAK,WACLC,KAAM,eAGV,8CAGHN,GAAc,yBAAKjB,UAAWC,IAAQyB,kBACnC,yBAAKC,IAAKV,EAAYW,IAAI,YAC1B,kBAACP,EAAA,EAAD,CACIC,KAAK,OACLC,KAAM,UACNC,YAAa,gBACbC,UAAWpB,OAKfN,GAAS,yBAAKC,UAAWC,IAAQ4B,oBAAxB,IAA8C9B,EAA9C,KAEb,6BACI,4BAAQuB,KAAK,UAAb,gB,uBChBLQ,uBAPS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBf,WAAYc,EAAME,KAAKhB,cAIS,CAACiB,WAA1BJ,EA5BD,SAAC,GAAiC,IAAhCI,EAA+B,EAA/BA,MAAOF,EAAwB,EAAxBA,OAAQf,EAAgB,EAAhBA,WAQ3B,OAAIe,EAAe,kBAAC,IAAD,CAAUG,GAAI,aAI7B,yBAAKnC,UAAWC,IAAQmC,gBACpB,qCACA,kBAAC,EAAD,CAAgBnB,WAAYA,EAAYG,SAV/B,SAACiB,GACdH,EAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI","file":"static/js/7.88eb59f0.chunk.js","sourcesContent":["import React from \"react\"\r\nimport classes from \"./FormControls.module.scss\"\r\n\r\n\r\nconst FormControls = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={\r\n            hasError\r\n                ? `${classes.formControl} ${classes.error}`\r\n                : `${classes.formControl}`\r\n        }\r\n        >\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            {hasError\r\n                ? <p className={classes.errorMessage}>{meta.error}</p>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = FormControls(\"textarea\");\r\nexport const Input = FormControls(\"input\");","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__gmpsC\",\"error\":\"FormControls_error__HbhS_\",\"errorMessage\":\"FormControls_errorMessage__2zmCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__form\":\"LoginForm_login__form__1q0VW\",\"form__summaryError\":\"LoginForm_form__summaryError__pe4Wl\"};","import React from \"react\";\r\nimport classes from \"./LoginForm.module.scss\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst LoginForm = ({error, handleSubmit, captchaUrl}) => {\r\n    return (\r\n        <div className={classes.loginFormComponent}>\r\n            <form className={classes.login__form} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name={\"email\"}\r\n                        placeholder={\"email\"}\r\n                        component={Input}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type=\"password\"\r\n                        name={\"password\"}\r\n                        placeholder={\"password\"}\r\n                        component={Input}\r\n                    />\r\n\r\n                </div>\r\n                <label>\r\n                    <Field\r\n                        component={\"input\"}\r\n                        type=\"checkbox\"\r\n                        name={\"rememberMe\"}\r\n                    />\r\n\r\n                    <span>remember me</span>\r\n                </label>\r\n\r\n                {captchaUrl && <div className={classes.captcha__wrapper}>\r\n                    <img src={captchaUrl} alt=\"captcha\"/>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name={\"captcha\"}\r\n                        placeholder={\"enter symbols\"}\r\n                        component={Input}\r\n                    />\r\n                </div>}\r\n\r\n                {\r\n                    error && <div className={classes.form__summaryError}> {error} </div>\r\n                }\r\n                <div>\r\n                    <button type=\"submit\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport classes from \"./Login.module.scss\"\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/reducers/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (isAuth) return <Redirect to={\"/profile\"}/>\r\n\r\n\r\n    return (\r\n        <div className={classes.loginComponent}>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm captchaUrl={captchaUrl} onSubmit={onSubmit}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n\r\n"],"sourceRoot":""}
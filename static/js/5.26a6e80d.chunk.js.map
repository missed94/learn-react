{"version":3,"sources":["components/common/FormsControls/FormControls.js","utils/validators/validators.js","components/common/FormsControls/FormControls.module.scss","components/hoc/withAuthRedirect.js","components/Profile/My_posts/NewPostForm/NewPostForm.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar.module.scss","components/Profile/My_posts/My_posts.module.scss","components/Profile/My_posts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatus/StatusForm/StatusForm.jsx","components/Profile/ProfileInfo/ProfileData/Contact/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My_posts/Post/Post.jsx","components/Profile/My_posts/NewPostForm/NewPostForm.jsx","components/Profile/My_posts/My_posts.jsx","components/Profile/My_posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControls","Element","input","meta","props","hasError","touched","error","className","classes","formControl","errorMessage","Textarea","Input","required","value","maxLengthCreator","maxLength","length","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","to","ProfileStatus","reduxForm","form","onBlur","handleSubmit","onSubmit","Field","autoFocus","name","component","placeholder","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","isOwner","deactivateEditMode","updateUserStatus","profileStatusComponent","status__wrap","authUserStatus","userStatus","onClick","onChange","e","target","Contact","contactTitle","contactValue","contactComponent","href","ProfileData","profile","ProfileDataComponent","row","row__title","fullName","aboutMe","Object","keys","contacts","map","key","lookingForAJob","lookingForAJobDescription","ProfileAvatar","savePhoto","profileAvatarComponent","avatar__container","avatar__imgWrapper","avatar","src","photos","large","alt","fileList","originFileObj","icon","UploadOutlined","ProfileDataFormRedux","fullNameInput","validate","AboutMeInput","contactInputs__list","contactInputs__item","form__summaryError","lookingForAJobInput","type","skillsInput","ProfileInfo","updateProfileData","profileInfoComponent","initialValues","data","then","Preloader","Post","postComponent","comment","message","likes","removePost","id","maxLength10","NewPostReduxForm","textarea","addBtn","My_posts","postsArray","myPosts","post","i","MyPostsComponent","values","addPost","posts","MyPostsContainer","compose","profilePage","newPostText","React","memo","Profile","profileComponent","ProfileContainer","urlProfileId","this","match","params","userId","AuthUserId","getProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","withRouter"],"mappings":"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","file":"static/js/5.26a6e80d.chunk.js","sourcesContent":["import React from \"react\"\r\nimport classes from \"./FormControls.module.scss\"\r\n\r\n\r\nconst FormControls = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={\r\n            hasError\r\n                ? `${classes.formControl} ${classes.error}`\r\n                : `${classes.formControl}`\r\n        }\r\n        >\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            {hasError\r\n                ? <p className={classes.errorMessage}>{meta.error}</p>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = FormControls(\"textarea\");\r\nexport const Input = FormControls(\"input\");","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__gmpsC\",\"error\":\"FormControls_error__HbhS_\",\"errorMessage\":\"FormControls_errorMessage__2zmCJ\"};","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"NewPostForm_textarea__3Iwi_\",\"addBtn\":\"NewPostForm_addBtn__MvEZd\",\"form__summaryError\":\"NewPostForm_form__summaryError__SoRHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoComponent\":\"ProfileInfo_profileInfoComponent__3k6Bg\",\"banner__wrap\":\"ProfileInfo_banner__wrap__1Z-d6\",\"banner\":\"ProfileInfo_banner__2wRen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatusComponent\":\"ProfileStatus_profileStatusComponent__wk3mw\",\"authUserStatus\":\"ProfileStatus_authUserStatus__1WklD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ProfileData_row__ifJ9p\",\"row__title\":\"ProfileData_row__title__ujXII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatarComponent\":\"ProfileAvatar_profileAvatarComponent__fkpyt\",\"avatar__container\":\"ProfileAvatar_avatar__container__14rdc\",\"avatar__imgWrapper\":\"ProfileAvatar_avatar__imgWrapper__39XJe\",\"avatar\":\"ProfileAvatar_avatar__264n-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPostsComponent\":\"My_posts_MyPostsComponent__19-p-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postComponent\":\"Post_postComponent__3KXCl\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./ProfileStatus.module.scss\"\r\nimport StatusReduxForm from \"./StatusForm/StatusForm\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status); // деструктуризация массива, useState возвращает массив \"[true, () => {}]\", пременные editMode и setEditMode присваиваются соответственно\r\n\r\n    useEffect( () => { //метод который вызывает переданную в него функцию уже после отрисовки всех компонентов\r\n        setStatus(props.status)\r\n    }, [props.status]) // зависимость, useEffect вызывается только тогда, когда меняется props.status\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileStatusComponent}>\r\n            {\r\n                !editMode &&\r\n                <div className={classes.status__wrap}>\r\n                    <span className={props.isOwner ? classes.authUserStatus : classes.userStatus} onClick={activateEditMode}>{\r\n                        props.isOwner\r\n                            ? props.status || \"введите статус\"\r\n                            : props.status || null\r\n                    }\r\n                    </span>\r\n                </div>\r\n            }\r\n            {\r\n                editMode &&/* <StatusReduxForm onSubmit={sendStatus} defaultValue={status}/>*/\r\n            <form>\r\n                <input autoFocus onClick={activateEditMode} onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n                <button onClick={deactivateEditMode}>Save</button>\r\n            </form>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\n\r\n\r\nconst StatusForm = (props) => {\r\n    return (\r\n        <form onBlur={props.handleSubmit} onSubmit={props.handleSubmit} >\r\n            <Field\r\n                autoFocus\r\n                name={\"status\"}\r\n                component={\"input\"}\r\n                placeholder={\"Enter status\"}\r\n            />\r\n            <button>Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst StatusReduxForm = reduxForm({\r\n    form: 'status'\r\n})(StatusForm)\r\n\r\nexport default StatusReduxForm","import React from \"react\";\r\nimport classes from \"./Contact.module.scss\"\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\r\n\r\n    return (\r\n        <li className={classes.contactComponent}>\r\n            {contactTitle}: <a href={contactValue}>{contactValue}</a>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from \"react\";\r\nimport classes from \"./ProfileData.module.scss\"\r\nimport Contact from \"./Contact/Contact\";\r\n\r\nconst ProfileData = ({profile, activateEditMode, isOwner}) => {\r\n\r\n\r\n    return (\r\n        <div className={classes.ProfileDataComponent}>\r\n            {isOwner && <button onClick={activateEditMode}>Change profile info</button>\r\n            }\r\n            <div className={classes.row}>\r\n                <h4 className={classes.row__title}>Name:</h4>\r\n                {profile.fullName}\r\n            </div >\r\n            <div className={classes.row}>\r\n                <h4 className={classes.row__title}>About me:</h4>\r\n                {profile.aboutMe}\r\n            </div>\r\n            <div className={classes.row}>\r\n                <h4 className={classes.row__title}>Contacts:</h4>\r\n                <ul>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className={classes.row}>\r\n                <h4 className={classes.row__title}>Looking for a job:</h4>\r\n                <p>{profile.lookingForAJob ? \"yes\" : \"no\"}</p>\r\n            </div>\r\n\r\n            <div className={classes.row}>\r\n                <h4 className={classes.row__title}>Professional skills:</h4>\r\n                {profile.lookingForAJob ? <p>{profile.lookingForAJobDescription}</p> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData","import React from \"react\";\r\nimport classes from \"./ProfileAvatar.module.scss\"\r\nimport Upload from \"antd/es/upload\";\r\nimport Button from \"antd/es/button\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst ProfileAvatar = ({profile, isOwner, savePhoto}) => {\r\n\r\n    let defaultPhotoUrl = \"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\"\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.fileList.length) {\r\n            savePhoto(e.fileList[0].originFileObj)\r\n        }\r\n    }\r\n    /*const onMainPhotoSelected = (e) => {\r\n\r\n        debugger\r\n        if (e.currentTarget.files.length) {\r\n            savePhoto(e.currentTarget.files[0])\r\n        }\r\n    }*/\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.profileAvatarComponent}>\r\n            <div className={classes.avatar__container}>\r\n                <div className={classes.avatar__imgWrapper}>\r\n                    <img className={classes.avatar} src={profile.photos.large || defaultPhotoUrl} alt=\"\"/>\r\n                </div>\r\n                {isOwner && <Upload onChange={onMainPhotoSelected}>\r\n                    <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                </Upload>} {/*<input className={classes.addPhoto__btn} onChange={onMainPhotoSelected} type={\"file\"}/>*/}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileAvatar","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport classes from \"../../../My_posts/NewPostForm/NewPostForm.module.scss\";\r\nimport {Input, Textarea} from \"../../../../common/FormsControls/FormControls\";\r\nimport {required} from \"../../../../../utils/validators/validators\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <h4>Name:</h4>\r\n                <Field className={classes.fullNameInput}\r\n                       name={\"fullName\"}\r\n                       component={Input}\r\n                       placeholder={\"Enter your full name\"}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h4>About me:</h4>\r\n                <Field className={classes.AboutMeInput}\r\n                       name={\"aboutMe\"}\r\n                       component={Textarea}\r\n                       placeholder={\"Ask about you\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h4>Contacts:</h4>\r\n                <ul>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return (\r\n                            <ul className={classes.contactInputs__list}>\r\n                                <p>{key}:</p>\r\n                                <Field className={classes.contactInputs__item}\r\n                                       name={`contacts.${key}`}\r\n                                       component={Input}\r\n                                       placeholder={`Ask your ${key}`}\r\n                                />\r\n                            </ul>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                {error && <div className={classes.form__summaryError}> {error} </div>}\r\n            </div>\r\n            <div>\r\n                <h4>Looking for a job:</h4>\r\n                <Field className={classes.lookingForAJobInput}\r\n                       name={\"lookingForAJob\"}\r\n                       component={\"input\"}\r\n                       type={\"checkbox\"}\r\n                    //placeholder={\"Ask about you\"}\r\n                    //validate={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <h4>Professional skills:</h4>\r\n                <Field className={classes.skillsInput}\r\n                       name={\"lookingForAJobDescription\"}\r\n                       component={Textarea}\r\n                       placeholder={\"Ask your skills\"}\r\n                    //validate={[required]}\r\n                />\r\n            </div>\r\n            <button>Submit profile info</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileDataFormRedux = reduxForm({\r\n    form: 'profile-data'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ProfileAvatar from \"./ProfileAvatar/ProfileAvatar\";\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm/ProfileDataForm\";\r\nimport ProfileDataFormRedux from \"./ProfileData/ProfileDataForm/ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, savePhoto, updateProfileData}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        if (isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const submitForm = (data) => {\r\n        updateProfileData(data).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileInfoComponent}>\r\n            <ProfileAvatar isOwner={isOwner} profile={profile} savePhoto={savePhoto}/>\r\n            <ProfileStatus isOwner={isOwner} status={status} updateUserStatus={updateUserStatus}/>\r\n            {\r\n                editMode ? <ProfileDataFormRedux profile={profile} initialValues={profile} onSubmit={submitForm}/> :\r\n                    <ProfileData profile={profile} activateEditMode={activateEditMode} isOwner={isOwner}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.scss\"\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n\r\n    const HandleRemovePost = () => {\r\n        props.removePost(props.id)\r\n    }\r\n\r\n  return (\r\n    <li className={classes.postComponent}>\r\n        <div>\r\n            <img src=\"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\" alt=\"\"/>\r\n            <p className={classes.comment}>{props.message}</p>\r\n            <div>\r\n                <p>Like <span>{props.likes}</span></p>\r\n            </div>\r\n        </div>\r\n        <button onClick={HandleRemovePost}>remove post</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport classes from \"./NewPostForm.module.scss\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormControls\";\r\n\r\n\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst NewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={classes.textarea}\r\n                   name={\"post\"}\r\n                   component={Textarea}\r\n                   placeholder={\"Enter your post\"}\r\n                   validate={[required,maxLength10]}\r\n            />\r\n            <button className={classes.addBtn}>Add post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({\r\n    form: 'post'\r\n})(NewPostForm)\r\n\r\nexport default NewPostReduxForm","import React from \"react\";\r\nimport classes from \"./My_posts.module.scss\"\r\nimport Post from \"./Post/Post\";\r\nimport NewPostReduxForm from \"./NewPostForm/NewPostForm\";\r\n\r\n\r\nconst My_posts = (props) => {\r\n    /*shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state //проверка на изменение state и props если вернется\r\n        false лишний render не производится исп в классовой компоненте, но лучше использовать PureComponent\r\n    }*/\r\n\r\n    let postsArray = props.myPosts.map((post, i) => {\r\n        return <Post key={post.id} id = {post.id} removePost={props.removePost} message={post.message} likes={post.likes}/>\r\n    })\r\n\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.post)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.MyPostsComponent}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <NewPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <ul className={classes.posts}>\r\n                {postsArray}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default My_posts","import React from \"react\";\r\nimport {addPost, removePost} from \"../../../redux/reducers/profile-reducer\";\r\nimport My_posts from \"./My_posts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPosts: state.profilePage.myPosts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = compose(\r\n    connect(mapStateToProps, {addPost, removePost}),\r\n    React.memo //альтернатитва pureComponent для функциональной компоненты\r\n)(My_posts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My_posts/MyPostsContainer\";\r\nimport {updateProfileData} from \"../../redux/reducers/profile-reducer\";\r\n\r\n\r\nconst Profile = ({profile, status, updateUserStatus, isOwner, savePhoto, updateProfileData}) => {\r\n    return (\r\n        <div className={classes.profileComponent}>\r\n            <ProfileInfo updateProfileData={updateProfileData} savePhoto={savePhoto} isOwner={isOwner} profile={profile} status={status} updateUserStatus={updateUserStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getUserStatus,\r\n    savePhoto,\r\n    updateProfileData,\r\n    updateUserStatus\r\n} from \"../../redux/reducers/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let urlProfileId = this.props.match.params.userId  //такой сложный путь связан с withRouter\r\n        if (!urlProfileId) {\r\n            urlProfileId = this.props.AuthUserId\r\n        }\r\n        this.props.getProfile(urlProfileId)\r\n        this.props.getUserStatus(urlProfileId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.profileComponent}>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    updateProfileData={this.props.updateProfileData}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    AuthUserId: state.auth.userId,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getProfile,\r\n            getUserStatus,\r\n            updateUserStatus,\r\n            savePhoto,\r\n            updateProfileData\r\n        }\r\n    ),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer)"],"sourceRoot":""}
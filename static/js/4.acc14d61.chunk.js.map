{"version":3,"sources":["components/common/FormsControls/FormControls.js","components/common/FormsControls/FormControls.module.scss","utils/validators/validators.js","components/hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Profile/My_posts/My_posts.module.scss","components/Profile/My_posts/Post/Post.module.scss","components/Profile/My_posts/NewPostForm/NewPostForm.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatus/StatusForm/StatusForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My_posts/Post/Post.jsx","components/Profile/My_posts/NewPostForm/NewPostForm.jsx","components/Profile/My_posts/My_posts.jsx","components/Profile/My_posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControls","Element","input","meta","props","hasError","touched","error","className","classes","formControl","errorMessage","Textarea","Input","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","to","ProfileStatus","reduxForm","form","onBlur","handleSubmit","onSubmit","Field","autoFocus","name","component","placeholder","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","deactivateEditMode","updateUserStatus","profileStatusComponent","status__wrap","onClick","onChange","e","target","ProfileInfo","profile","profileInfoComponent","banner__wrap","banner","src","description","photos","large","avatar","alt","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","Preloader","Post","postComponent","comment","message","likes","removePost","id","maxLength10","NewPostReduxForm","textarea","validate","addBtn","My_posts","console","log","postsArray","myPosts","map","post","i","key","MyPostsComponent","values","addPost","posts","MyPostsContainer","compose","profilePage","newPostText","React","memo","Profile","profileComponent","ProfileContainer","urlProfileId","this","match","params","userId","AuthUserId","getProfile","getUserStatus","withRouter"],"mappings":"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","file":"static/js/4.acc14d61.chunk.js","sourcesContent":["import React from \"react\"\r\nimport classes from \"./FormControls.module.scss\"\r\n\r\n\r\nconst FormControls = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={\r\n            hasError\r\n                ? `${classes.formControl} ${classes.error}`\r\n                : `${classes.formControl}`\r\n        }\r\n        >\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            {hasError\r\n                ? <p className={classes.errorMessage}>{meta.error}</p>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = FormControls(\"textarea\");\r\nexport const Input = FormControls(\"input\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3DcmB\",\"error\":\"FormControls_error__3miJ6\",\"errorMessage\":\"FormControls_errorMessage__1bLAC\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner__wrap\":\"ProfileInfo_banner__wrap__33QyD\",\"banner\":\"ProfileInfo_banner__15hOj\",\"description\":\"ProfileInfo_description__1CNCY\",\"avatar\":\"ProfileInfo_avatar__2aQcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatusComponent\":\"ProfileStatus_profileStatusComponent__2kUf2\",\"status__wrap\":\"ProfileStatus_status__wrap__1eCLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPostsComponent\":\"My_posts_MyPostsComponent__3UC9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postComponent\":\"Post_postComponent__2vjOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"NewPostForm_textarea__35IzT\",\"addBtn\":\"NewPostForm_addBtn__2Gboi\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./ProfileStatus.module.scss\"\r\nimport StatusReduxForm from \"./StatusForm/StatusForm\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status); // деструктуризация массива, useState возвращает массив \"[true, () => {}]\", пременные editMode и setEditMode присваиваются соответственно\r\n\r\n    useEffect( () => { //метод который вызывает переданную в него функцию уже после отрисовки всех компонентов\r\n        setStatus(props.status)\r\n    }, [props.status]) // зависимость, useEffect вызывается только тогда, когда меняется props.status\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileStatusComponent}>\r\n            {\r\n                !editMode &&\r\n                <div className={classes.status__wrap}>\r\n                    <span onClick={activateEditMode}>{props.status || \"введите статус\"}</span>\r\n                </div>\r\n            }\r\n            {\r\n                editMode &&/* <StatusReduxForm onSubmit={sendStatus} defaultValue={status}/>*/\r\n            <form>\r\n                <input autoFocus onClick={activateEditMode} onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n                <button onClick={deactivateEditMode}>Save</button>\r\n            </form>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\n\r\n\r\nconst StatusForm = (props) => {\r\n    return (\r\n        <form onBlur={props.handleSubmit} onSubmit={props.handleSubmit} >\r\n            <Field\r\n                autoFocus\r\n                name={\"status\"}\r\n                component={\"input\"}\r\n                placeholder={\"Enter status\"}\r\n            />\r\n            <button>Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst StatusReduxForm = reduxForm({\r\n    form: 'status'\r\n})(StatusForm)\r\n\r\nexport default StatusReduxForm","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n\r\n    let defaultPhotoUrl = \"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\"\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileInfoComponent}>\r\n            <div className={classes.banner__wrap}>\r\n                <img\r\n                    className={classes.banner}\r\n                    src=\"https://s3.nat-geo.ru/images/2019/6/23/2054642dfdd241c99fc32579ab7e1c61.max-1200x800.jpg\"\r\n                />\r\n            </div>\r\n            <div className={classes.description}>\r\n                {\r\n                    !profile.photos.large\r\n                    ? <img className={classes.avatar} src={defaultPhotoUrl} alt=\"\"/>\r\n                    : <img className={classes.avatar} src={profile.photos.large} alt=\"\"/>\r\n                }\r\n                <ProfileStatus status={status} updateUserStatus={updateUserStatus}/>\r\n                <div>\r\n                    <h4>Name:</h4>\r\n                    {profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <h4>About me:</h4>\r\n                    {profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <h4>Contacts:</h4>\r\n                    <ul>\r\n                        <li>{profile.contacts.facebook}</li>\r\n                        <li>{profile.contacts.website}</li>\r\n                        <li>{profile.contacts.vk}</li>\r\n                        <li>{profile.contacts.twitter}</li>\r\n                        <li>{profile.contacts.instagram}</li>\r\n                        <li>{profile.contacts.youtube}</li>\r\n                        <li>{profile.contacts.github}</li>\r\n                        <li>{profile.contacts.mainLink}</li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h4>Looking for a job: </h4>\r\n                    {profile.lookingForAJob ? <p>{profile.lookingForAJobDescription}</p> : null}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.scss\"\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n\r\n    const HandleRemovePost = () => {\r\n        props.removePost(props.id)\r\n    }\r\n\r\n  return (\r\n    <li className={classes.postComponent}>\r\n        <div>\r\n            <img src=\"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\" alt=\"\"/>\r\n            <p className={classes.comment}>{props.message}</p>\r\n            <div>\r\n                <p>Like <span>{props.likes}</span></p>\r\n            </div>\r\n        </div>\r\n        <button onClick={HandleRemovePost}>remove post</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport classes from \"./NewPostForm.module.scss\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormControls\";\r\n\r\n\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst NewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={classes.textarea}\r\n                   name={\"post\"}\r\n                   component={Textarea}\r\n                   placeholder={\"Enter your post\"}\r\n                   validate={[required,maxLength10]}\r\n            />\r\n            <button className={classes.addBtn}>Add post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({\r\n    form: 'post'\r\n})(NewPostForm)\r\n\r\nexport default NewPostReduxForm","import React from \"react\";\r\nimport classes from \"./My_posts.module.scss\"\r\nimport Post from \"./Post/Post\";\r\nimport NewPostReduxForm from \"./NewPostForm/NewPostForm\";\r\n\r\n\r\nconst My_posts = (props) => {\r\n    console.log(\"render\")\r\n    /*shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state //проверка на изменение state и props если вернется\r\n        false лишний render не производится исп в классовой компоненте, но лучше использовать PureComponent\r\n    }*/\r\n\r\n    let postsArray = props.myPosts.map((post, i) => {\r\n        return <Post key={post.id} id = {post.id} removePost={props.removePost} message={post.message} likes={post.likes}/>\r\n    })\r\n\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.post)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.MyPostsComponent}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <NewPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <ul className={classes.posts}>\r\n                {postsArray}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default My_posts","import React from \"react\";\r\nimport {addPost, removePost} from \"../../../redux/reducers/profile-reducer\";\r\nimport My_posts from \"./My_posts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPosts: state.profilePage.myPosts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = compose(\r\n    connect(mapStateToProps, {addPost, removePost}),\r\n    React.memo //альтернатитва pureComponent для функциональной компоненты\r\n)(My_posts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My_posts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = ({profile, status, updateUserStatus}) => {\r\n    return (\r\n        <div className={classes.profileComponent}>\r\n            <ProfileInfo profile={profile} status={status} updateUserStatus={updateUserStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getUserStatus, updateUserStatus} from \"../../redux/reducers/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let urlProfileId = this.props.match.params.userId  //такой сложный путь связан с withRouter\r\n        if (!urlProfileId) {\r\n            urlProfileId = this.props.AuthUserId\r\n        }\r\n        this.props.getProfile(urlProfileId)\r\n        this.props.getUserStatus(urlProfileId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.profileComponent}>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    AuthUserId: state.auth.userId,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getProfile,\r\n            getUserStatus,\r\n            updateUserStatus\r\n        }\r\n    ),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer)"],"sourceRoot":""}
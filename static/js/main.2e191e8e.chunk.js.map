{"version":3,"sources":["components/Users/User/User.module.scss","components/common/Pagination/Pagination.module.scss","components/Header/Header.module.scss","redux/reducers/auth-reducer.ts","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navigation/Navigation.jsx","components/Friends/FriendsItem/FriendsItem.jsx","components/Friends/Friends.jsx","components/Sidebar/Sidebar.jsx","components/Users/User/User.jsx","components/common/Pagination/Pagination.tsx","components/Users/Users.tsx","utils/helpers/helpers.js","redux/reducers/users-reducer.ts","redux/selectors/users-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/reducers/app-reducer.ts","redux/reducers/sidebar-reducer.ts","redux/redux-store.js","components/hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.jsx","components/common/validContactsObjCreated/validContactsObjCreated.js","redux/reducers/profile-reducer.ts","components/Friends/Friends.module.scss","components/Navigation/Navigation.module.scss","components/Users/Users.module.scss","components/common/Preloader/Preloader.module.scss","redux/reducers/dialogs-reducer.ts","api/api.js","components/Sidebar/Sidebar.module.scss","components/Friends/FriendsItem/FriendsItem.module.scss","components/common/Preloader/preloader.gif"],"names":["module","exports","initialState","userId","email","login","isFetching","isAuth","photos","captchaUrl","setAuthUserData","type","payload","captchaUrlSuccess","getAuthUserData","dispatch","a","loginAPI","me","data","resultCode","id","profileAPI","getProfile","password","rememberMe","captcha","getCaptchaURL","message","messages","length","stopSubmit","_error","securityAPI","getCaptcha","url","logout","authReducer","state","action","News","className","Music","Settings","Navigation","props","classes","navigationComponent","list","item","link","activeClassName","active","to","FriendsItem","friendsItemComponent","href","src","alt","friendName","Friends","friendsArray","map","friend","i","key","name","friendsComponent","friendsList","Sidebar","sidebarComponent","friends","User","getFollow","getUnfollow","followingInProgress","user","userComponent","wrapper","avatar","img_wrap","small","followed","disabled","some","button","onClick","desc","nameStatus","fullName","status","status__text","location__wrap","country","city","Pagination","totalItemsCount","pageSize","pageChanged","currentPage","portionSize","pagesCount","Math","ceil","pageNumbers","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginationComponent","pagination","prev__button","pagination__list","filter","pageNumber","pagination__item","pagination__link_active","pagination__link","next__button","Users","usersArray","users","index","usersComponent","users__list","mappingArraysInObject","items","objPropName","actionPropName","newObjProps","follow","unfollow","toggleIsFetching","toggleFollowingInProgress","followUnfollowToggle","apiMethod","actionCreator","usersReducer","getUsers","usersPage","getPageSize","getTotalCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersContainer","requestUsers","this","Preloader","React","Component","connect","usersAPI","totalCount","followUnfollowAPI","bind","Header","headerComponent","login__container","headerLogin__wrapper","headerAvatar__wrapper","photo","loginName","headerBtn__wrapper","headerBtn","login__link","auth","currentId","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","Login","App","initializeApp","HeaderContainer","exact","from","path","render","AppContainer","withRouter","SamuraiJSApp","getState","ReactDOM","document","getElementById","preloaderComponent","preloaderImg","preloader","validContactsObjCreated","responseData","newArray","split","interMedStr","substr","mainString","toLowerCase","myPosts","likes","profile","addPost","newPost","setUserStatus","removePost","postId","getUserStatus","getStatus","alert","updateUserStatus","updateStatus","savePhoto","newPhoto","updatePhoto","updateProfileData","updateData","Promise","reject","p","dialogs","onSendMessage","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","put","formData","FormData","append"],"mappings":"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","file":"static/js/main.2e191e8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userComponent\":\"User_userComponent__2h-jU\",\"wrapper\":\"User_wrapper__1-5VF\",\"avatar\":\"User_avatar__JR9Bl\",\"button\":\"User_button__v9DX6\",\"img_wrap\":\"User_img_wrap__Q63_x\",\"desc\":\"User_desc__3tDgY\",\"fullName\":\"User_fullName__1dfpZ\",\"country\":\"User_country__1QKEg\",\"location__wrap\":\"User_location__wrap__1vRit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationComponent\":\"Pagination_paginationComponent__1mjIe\",\"pagination\":\"Pagination_pagination__19QCN\",\"pagination__list\":\"Pagination_pagination__list__2nnpm\",\"pagination__link\":\"Pagination_pagination__link__3SKco\",\"pagination__link_active\":\"Pagination_pagination__link_active__2ikgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerComponent\":\"Header_headerComponent__1Dr3W\",\"headerLogin__wrapper\":\"Header_headerLogin__wrapper__2wQSo\",\"headerAvatar__wrapper\":\"Header_headerAvatar__wrapper__15oyM\",\"login__link\":\"Header_login__link__LRHtA\",\"photo\":\"Header_photo__3somd\",\"headerBtn__wrapper\":\"Header_headerBtn__wrapper__2o6LF\"};","import {loginAPI, profileAPI, securityAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst CAPTCHA_URL_SUCCESS = 'CAPTCHA_URL_SUCCESS'\r\n\r\n\r\nexport type initialStateType2 = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isFetching: boolean,\r\n    isAuth: boolean,\r\n    photos: object,\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst initialState:initialStateType2 = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    photos: {},\r\n    captchaUrl:null\r\n}\r\n\r\n//type initialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action:any):initialStateType2 => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n\r\n        case CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype setAuthUserDataActionPayloadType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean | null,\r\n    photos: object | null\r\n}\r\n\r\ntype setAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA;\r\n    payload: setAuthUserDataActionPayloadType;\r\n}\r\n\r\n const setAuthUserData = (\r\n     userId:number | null,\r\n     email:string | null,\r\n     login:string | null,\r\n     isAuth:boolean,\r\n     photos:object | null\r\n ):setAuthUserDataActionType => ({\r\n    type: SET_USER_DATA,\r\n     payload: {\r\n        userId, email, login, isAuth, photos\r\n    }\r\n})\r\n\r\ntype captchaUrlSuccessType = {\r\n    type: typeof CAPTCHA_URL_SUCCESS,\r\n    captchaUrl: string\r\n}\r\n\r\n const captchaUrlSuccess = (captchaUrl:string):captchaUrlSuccessType => ({\r\n     type: CAPTCHA_URL_SUCCESS,\r\n     captchaUrl\r\n })\r\n\r\nexport const getAuthUserData = () => async (dispatch:any) => {\r\n    let data = await loginAPI.me()\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data\r\n        let {photos} = await profileAPI.getProfile(id)\r\n        dispatch(setAuthUserData(id, email, login, true, photos))\r\n    }\r\n}\r\n\r\n\r\nexport const login = (\r\n    email:string,\r\n    password:string,\r\n    rememberMe:boolean,\r\n    captcha:string\r\n) => async (dispatch:any) => {\r\n        let data = await loginAPI.login(email, password, rememberMe, captcha)\r\n        if (data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (data.resultCode === 10) {\r\n                dispatch(getCaptchaURL())\r\n            }\r\n            let message = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message,}))\r\n        }\r\n    }\r\n\r\n\r\nexport const getCaptchaURL = () => async (dispatch:any) => {\r\n    const data = await securityAPI.getCaptcha()\r\n    const captchaUrl = data.url\r\n    dispatch(captchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch:any) => {\r\n        let data = await loginAPI.logout()\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false, null))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport classes from \"./News.module.scss\";\r\n\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className=\"newsComponent\">\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Music.module.scss\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className=\"musicComponent\">\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from \"react\";\r\nimport classes from \"./Settings.module.scss\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport classes from\"./Navigation.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <nav className={classes.navigationComponent}>\r\n      <ul className={classes.list}>\r\n        <li className={classes.item}>\r\n          <NavLink className={classes.link} activeClassName={classes.active} to={`/profile/`}>Profile</NavLink>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <NavLink className={classes.link} activeClassName={classes.active} to=\"/dialogs\">Messages</NavLink>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <NavLink className={classes.link} activeClassName={classes.active} to=\"/users\">Users</NavLink>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <NavLink className={classes.link} activeClassName={classes.active} to=\"/news\">News</NavLink>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <NavLink className={classes.link} activeClassName={classes.active} to=\"/music\">Music</NavLink>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <NavLink className={classes.link} activeClassName={classes.active} to=\"/settings\">Settings</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation","import React from \"react\";\r\nimport classes from\"./FriendsItem.module.scss\"\r\n\r\n\r\n\r\n\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <li className={classes.friendsItemComponent}>\r\n            <a href=\"\">\r\n                <img src=\"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\" alt=\"\"/>\r\n                <p>{props.friendName}</p>\r\n            </a>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default FriendsItem","import React from \"react\";\r\nimport classes from\"./Friends.module.scss\"\r\nimport FriendsItem from \"./FriendsItem/FriendsItem\";\r\n\r\n\r\n\r\n\r\nconst Friends = (props) => {\r\n    const friendsArray = props.state.map((friend, i) => {\r\n        return (<FriendsItem key={i} id={friend.id} friendName={friend.name}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.friendsComponent}>\r\n            <h3>Friends</h3>\r\n            <ul className={classes.friendsList}>\r\n                {friendsArray}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friends","import React from \"react\";\r\nimport classes from\"./Sidebar.module.scss\"\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport Friends from \"../Friends/Friends\";\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <div className={classes.sidebarComponent}>\r\n            <Navigation/>\r\n            <Friends state={props.state.friends}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar","import React from \"react\";\r\nimport classes from \"./User.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = ({getFollow, getUnfollow, followingInProgress, user, ...props}) => {\r\n\r\n\r\n    let onFollow = () => {\r\n        getFollow(user.id)\r\n    }\r\n    let onUnfollow = () => {\r\n        getUnfollow(user.id)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <li className={classes.userComponent}>\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.avatar}>\r\n                    <div className={classes.img_wrap}>\r\n\r\n                        <NavLink to={`/profile/${user.id}`}>\r\n                            <img src={user.photos.small !== null\r\n                                ? user.photos.small\r\n                                : \"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\"}\r\n                                 alt=\"user\"\r\n                            />\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                    {user.followed\r\n                        ? <button\r\n                            disabled={followingInProgress.some(id => id === user.id)} //если хоть одна id из массива равна id пользлвателя при нажатии то ее и disabl'и\r\n                            className={classes.button} onClick={onUnfollow}> unfollow </button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  className={classes.button} onClick={onFollow}> follow </button>\r\n                    }\r\n\r\n                </div>\r\n                <div className={classes.desc}>\r\n                    <div className={classes.nameStatus}>\r\n                        <h4 className={classes.fullName}>\r\n                            Name: <div>{` ${user.name}`}</div>\r\n                        </h4>\r\n                        <div className={classes.status}>\r\n                            Status: <div className={classes.status__text}>{` ${user.status}`}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.location__wrap}>\r\n                        <div className={classes.country}>\r\n                            Country:{/*{` ${props.user.location.country}`}*/}\r\n                        </div>\r\n                        <div className={classes.city}>\r\n                            City:{/*{` ${props.user.location.city}`}*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useState} from \"react\";\r\nimport classes from \"./Pagination.module.scss\"\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number,\r\n    pageSize: number,\r\n    pageChanged: (pageNumber: number) => void,\r\n    currentPage: number,\r\n    portionSize?: number,\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = ({\r\n                                             totalItemsCount,\r\n                                             pageSize,\r\n                                             pageChanged,\r\n                                             currentPage,\r\n                                             portionSize = 10\r\n}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pageNumbers: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n\r\n        <div className={classes.paginationComponent}>\r\n            <div className={classes.pagination}>\r\n                {\r\n                    portionNumber > 1 &&\r\n                    <button className={`${classes.button} ${classes.prev__button}`} onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }}>PREV</button>\r\n                }\r\n\r\n                <ul className={classes.pagination__list}>\r\n                    {pageNumbers\r\n                        .filter(pageNumber => pageNumber >= leftPortionPageNumber && pageNumber <= rightPortionPageNumber)\r\n                        .map((pageNumber) => {\r\n                            return (\r\n                                <li className={classes.pagination__item}>\r\n                                    <a onClick={() => {\r\n                                        pageChanged(pageNumber)\r\n                                    }}\r\n                                       className={\r\n                                           currentPage === pageNumber\r\n                                               ? classes.pagination__link_active\r\n                                               : classes.pagination__link}>\r\n                                        {pageNumber}\r\n                                    </a>\r\n                                </li>\r\n                            )\r\n                        })}\r\n\r\n                </ul>\r\n\r\n                {\r\n                    portionNumber < portionCount &&\r\n                    <button className={`${classes.button} ${classes.next__button}`} onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }}>NEXT</button>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, {FC} from \"react\";\r\nimport User from \"./User/User\";\r\nimport classes from \"./Users.module.scss\"\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport {usersType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    getFollow: (userId: number) => void,\r\n    getUnfollow: (userId: number) => void,\r\n    followingInProgress: Array<number>,\r\n    users: Array<usersType>,\r\n    totalItemsCount: number,\r\n    pageSize: number,\r\n    pageChanged: (pageNumber: number) => void,\r\n    currentPage: number,\r\n    portionSize: number\r\n}\r\n\r\n\r\nconst Users: FC<PropsType> = (props) => {\r\n\r\n    let usersArray = props.users.map((user:usersType, index:number) => {\r\n        return (\r\n            <User\r\n                key={user.id}\r\n                user={user}\r\n                getFollow={props.getFollow}\r\n                getUnfollow={props.getUnfollow}\r\n                followingInProgress={props.followingInProgress}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.usersComponent}>\r\n            <Pagination\r\n                totalItemsCount={props.totalItemsCount}\r\n                pageSize={props.pageSize}\r\n                pageChanged={props.pageChanged}\r\n                currentPage={props.currentPage}\r\n                portionSize={props.portionSize}\r\n            />\r\n            <ul className={classes.users__list}>\r\n                {usersArray}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","export const mappingArraysInObject = (items, objPropName, actionPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === actionPropName) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item\r\n    })\r\n}","import {followUnfollowAPI, usersAPI} from \"../../api/api\";\r\nimport {mappingArraysInObject} from \"../../utils/helpers/helpers\";\r\nimport {usersType} from \"../../types/types\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'FOLLOWING_IN_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<usersType>,\r\n    portionSize: 10,\r\n    pageSize: 30,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\nconst usersReducer = (state = initialState, action: any): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: mappingArraysInObject( // смотри helpers.js\r\n                    state.users,\r\n                    'id',\r\n                    action.userId,\r\n                    {followed: true}\r\n                )\r\n            }\r\n        }\r\n        case\r\n        UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: mappingArraysInObject(\r\n                    state.users,\r\n                    'id',\r\n                    action.userId,\r\n                    {followed: false}\r\n                )\r\n            }\r\n        }\r\n        case\r\n        SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case\r\n        SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        }\r\n        case\r\n        SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalItemsCount: action.totalItemsCount\r\n            }\r\n        }\r\n        case\r\n        TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n        case\r\n        TOGGLE_IS_FOLLOWING_PROGRESS: { //блокировка кнопки при нажатии follow/unfollow\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching // если isFetching === true\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)] //filter уже вернет новый массив..добавляем только те id которая не равны id из action'а\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport type followType = {\r\n    type: typeof FOLLOW,\r\n    userId: number\r\n}\r\nexport const follow = (userId: number): followType => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport type unfollowType = {\r\n    type: typeof UNFOLLOW,\r\n    userId: number\r\n}\r\nexport const unfollow = (userId: number): unfollowType => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\n\r\nexport type setUsersType = {\r\n    type: typeof SET_USERS,\r\n    users: Array<usersType>\r\n}\r\nexport const setUsers = (users: Array<usersType>): setUsersType => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport type setCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE,\r\n    pageNumber: number\r\n}\r\nexport const setCurrentPage = (pageNumber: number): setCurrentPageType => ({\r\n    type: SET_CURRENT_PAGE,\r\n    pageNumber\r\n});\r\n\r\n\r\nexport type setTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    totalItemsCount: number\r\n}\r\nexport const setTotalUsersCount = (totalItemsCount: number): setTotalUsersCountType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalItemsCount\r\n});\r\n\r\nexport type toggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING,\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingType => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n\r\nexport type toggleFollowingInProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: boolean,\r\n    userId: number,\r\n}\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number): toggleFollowingInProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));//circle of loading on\r\n        dispatch(setCurrentPage(currentPage))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false)); //circle of loading off\r\n    }\r\n}\r\n\r\nconst followUnfollowToggle = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingInProgress(true, userId)) //disabled button\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId)) //enabled button\r\n}\r\n\r\nexport const getFollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        await followUnfollowToggle(dispatch, userId, followUnfollowAPI.getFollow.bind(followUnfollowAPI), follow)\r\n    }\r\n}\r\n\r\nexport const getUnfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        await followUnfollowToggle(dispatch, userId, followUnfollowAPI.getUnfollow.bind(followUnfollowAPI), unfollow)\r\n    }\r\n}\r\n\r\nexport default usersReducer","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalCount = (state) => {\r\n    return state.usersPage.totalItemsCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.usersPage.portionSize\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    toggleFollowingInProgress,\r\n     getFollow, getUnfollow, requestUsers\r\n} from \"../../redux/reducers/users-reducer\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getPortionSize, getTotalCount, getUsers,\r\n} from \"../../redux/selectors/users-selector\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() { //жизненный цикл, встроенный объект\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    pageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching\r\n                    ? <Preloader/>\r\n                    : null}\r\n                <Users\r\n                    totalItemsCount={this.props.totalItemsCount}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    pageChanged={this.pageChanged}\r\n                    getUnfollow={this.props.getUnfollow}\r\n                    toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    getFollow={this.props.getFollow}\r\n                    portionSize={this.props.portionSize}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPortionSize(state),\r\n    }\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        toggleFollowingInProgress,\r\n        requestUsers,\r\n        getFollow,\r\n        getUnfollow\r\n    }\r\n)(UsersContainer);","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./Header.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\r\n    let defaultPhotoUrl = \"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\"\r\n\r\n    return (\r\n        <header className={classes.headerComponent}>\r\n            <img\r\n                src=\"https://image.similarpng.com/very-thumbnail/2020/07/Whatsapp-logo-design-on-transparent-background-PNG.png\"/>\r\n            <div className={classes.login__container}>\r\n                {props.isAuth\r\n                    ? <div className={classes.headerLogin__wrapper}>\r\n                        <div className={classes.headerAvatar__wrapper}>\r\n                            <img className={classes.photo}\r\n                                 src={props.photos.small || defaultPhotoUrl}\r\n                                 alt=\"\"/>\r\n                            <span className={classes.loginName}>{props.loginName}</span>\r\n                        </div>\r\n\r\n                        <div className={classes.headerBtn__wrapper}>\r\n                            <button className={classes.headerBtn} onClick={props.logout}>logout</button>\r\n                        </div>\r\n                    </div>\r\n                    : <NavLink className={classes.login__link} to={`/login`}> Login\r\n                    </NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/reducers/auth-reducer\";\r\nimport {getProfile} from \"../../redux/reducers/profile-reducer\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    loginName: state.auth.login,\r\n    currentId: state.auth.id,\r\n    photos: state.auth.photos,\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout,\r\n}) (Header);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nexport type initialStateType = {\r\n    initialized: boolean,\r\n}\r\n\r\nlet initialState:initialStateType = {\r\n    initialized: false,\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action:any):initialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype initializedActionType = {\r\n    type: typeof SET_INITIALIZED;\r\n}\r\n\r\nconst setInitialized = ():initializedActionType => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => {\r\n    return async (dispatch:any) => {\r\n        await dispatch(getAuthUserData())\r\n        dispatch(setInitialized())\r\n    }\r\n}\r\n\r\n\r\nexport default appReducer","\r\n\r\ntype friendsType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Danil\"},\r\n        {id: 2, name: \"Artem\"},\r\n        {id: 3, name: \"Dima\"},\r\n        {id: 4, name: \"Igor\"},\r\n    ] as Array<friendsType>\r\n};\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n const sidebarReducer = (state = initialState, action:any) => {\r\n    return state;\r\n}\r\n\r\n export default sidebarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport sidebarReducer from \"./reducers/sidebar-reducer\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./reducers/app-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store","import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport React, {Suspense} from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => (props) => {\r\n    return (\r\n        <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n        )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/reducers/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./components/hoc/withSuspense\";\r\n\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); //ленивая загрузка компоненты\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n           return <Preloader/>\r\n        }\r\n        return (\r\n\r\n            <div className=\"app-wrapper\">\r\n                <div className=\"app-container\">\r\n                    <HeaderContainer/>\r\n                    <Sidebar state={this.props.state.sidebar}/>\r\n                    <div className=\"app-wrapper-content\">\r\n                            <Redirect exact from=\"/\" to=\"/profile\" />\r\n\r\n                            <Route\r\n                                path=\"/login\"\r\n                                render={withSuspense(Login)}\r\n                            />\r\n                            <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}\r\n                            />\r\n                            <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}\r\n                            />\r\n                            <Route path=\"/Users\" render={() =>\r\n                                <UsersContainer/>\r\n                            }\r\n                            />\r\n                            <Route path=\"/news\" render={() => <News/>}/>\r\n                            <Route path=\"/music\" render={() => <Music/>}/>\r\n                            <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        {initializeApp}\r\n    ),\r\n    withRouter\r\n)(App)\r\n\r\n\r\n let SamuraiJSApp = (props) => {\r\n   return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer\r\n                state={store.getState()}\r\n            />\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport 'normalize.css';\r\nimport './reset.css'\r\nimport './index.scss';\r\nimport SamuraiJSApp from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Preloader.module.scss\";\r\nimport preloader from \"./preloader.gif\";\r\n\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return (\r\n        <div className={classes.preloaderComponent}>\r\n            <img className={classes.preloaderImg} src={preloader}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","const validContactsObjCreated = (responseData) => {\r\n    let message = responseData.length > 0 ? responseData[0] : \"Some error\"\r\n\r\n    let newArray = responseData[0].split(' ')\r\n    let newString = newArray[newArray.length - 1]\r\n\r\n    let interMedStr = newString.substr(11)\r\n    let mainString = interMedStr.toLowerCase().substr(0,interMedStr.length - 1)\r\n\r\n    return  ({\r\n        [mainString]: message\r\n    })\r\n}\r\n\r\nexport default validContactsObjCreated","import {profileAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport validContactsObjCreated from \"../../components/common/validContactsObjCreated/validContactsObjCreated\";\r\nimport {myPostsType, photosType, profileType} from \"../../types/types\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_USER_STATUS = 'SET_USER_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO = 'SAVE_PHOTO'\r\n\r\n\r\nlet initialState = {\r\n    myPosts: [\r\n        {id: 1, message: \"Hi, how are you!\", likes: 30},\r\n        {id: 2, message: \"it's my first post\", likes: 20}\r\n    ] as Array<myPostsType>,\r\n    profile: null as profileType | null,\r\n    status: \"\" as string,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action:any):initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPost,\r\n                likes: 0,\r\n            };\r\n            return { //если есть return, break можно не использовать\r\n                ...state,\r\n                myPosts: [newPost, ...state.myPosts],\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                myPosts: state.myPosts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as profileType\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype addPostType = {\r\n    type: typeof ADD_POST,\r\n    newPost: string\r\n}\r\nexport const addPost = (newPost:string):addPostType => ({\r\n    type: ADD_POST,\r\n    newPost\r\n})\r\n\r\ntype setUserProfileType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: profileType\r\n}\r\nexport const setUserProfile = (profile:profileType):setUserProfileType => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\n\r\n\r\ntype setUserStatusType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n}\r\nexport const setUserStatus = (status:string):setUserStatusType => ({\r\n    type: SET_USER_STATUS,\r\n    status\r\n})\r\n\r\ntype removePostType = {\r\n    type: typeof DELETE_POST,\r\n    postId: number\r\n}\r\nexport const removePost = (postId: number): removePostType => ({\r\n    type: DELETE_POST,\r\n    postId\r\n})\r\n\r\ntype savePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO,\r\n    photos: photosType\r\n}\r\nexport const savePhotoSuccess = (photos:photosType):savePhotoSuccessType => ({\r\n    type: SAVE_PHOTO,\r\n    photos\r\n})\r\n\r\n\r\nexport const getProfile = (id:number) => {\r\n    return async (dispatch:any) => {\r\n        let data = await profileAPI.getProfile(id)\r\n        dispatch(setUserProfile(data))\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (id:number) => async (dispatch:any) => {\r\n    try {\r\n        let data = await profileAPI.getStatus(id)\r\n        dispatch(setUserStatus(data))\r\n    } catch (error) {\r\n        alert(error.message)\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserStatus = (status:string) => async (dispatch:any) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status)\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserStatus(status))\r\n        }\r\n    } catch (error) {\r\n        alert(error.message)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const savePhoto = (newPhoto:any) => {\r\n    return async (dispatch:any, getState:any) => {\r\n        let data = await profileAPI.updatePhoto(newPhoto)\r\n        if (data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(data.data.photos))\r\n            dispatch(getAuthUserData())\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateProfileData = (profile:profileType) => {\r\n    return async (dispatch:any, getState:any) => {\r\n        const userId = getState().auth.userId\r\n        const data = await profileAPI.updateData(profile)\r\n        if (data.resultCode === 0) {\r\n            dispatch(getProfile(userId))\r\n        } else {\r\n            dispatch(stopSubmit('profile-data', {\"contacts\": validContactsObjCreated(data.messages)}))\r\n            return Promise.reject(data.messages[0]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsComponent\":\"Friends_friendsComponent__2AXFG\",\"friendsList\":\"Friends_friendsList__Vnsk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationComponent\":\"Navigation_navigationComponent__2THYA\",\"item\":\"Navigation_item__3FC-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersComponent\":\"Users_usersComponent__2txS4\",\"users__list\":\"Users_users__list__VWhRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderComponent\":\"Preloader_preloaderComponent__3FZ8B\",\"preloaderImg\":\"Preloader_preloaderImg__2MWNV\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\n\r\ntype dialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype messagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n/*type initialStateType2 = {\r\n    dialogs: Array<dialogsType>\r\n    messages: Array<messagesType>\r\n}*/\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Andrey\"},\r\n        {id: 2, name: \"Oleg\"},\r\n        {id: 3, name: \"Oxana\"},\r\n        {id: 4, name: \"Lisa\"},\r\n    ] as Array<dialogsType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"How are you\"},\r\n        {id: 3, message: \"What is your health\"},\r\n    ] as Array<messagesType>,\r\n}\r\ntype initialStateType = typeof initialState\r\n\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action:any): initialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype onSendMessagePayloadType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\ntype onSendMessageType = {\r\n    type: typeof SEND_MESSAGE,\r\n    payload: onSendMessagePayloadType\r\n}\r\n\r\nexport const onSendMessage = (\r\n    id: number,\r\n    message: string\r\n): onSendMessageType => ({\r\n    type: SEND_MESSAGE,\r\n    payload: {\r\n        id,\r\n        message\r\n    }\r\n})\r\n\r\n\r\nexport default dialogsReducer","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"api-key\": \"201d1bd9-901a-4727-afb5-9d1c77d38b75\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n}\r\n\r\nexport const followUnfollowAPI = {\r\n    getFollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n\r\n    getUnfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n\r\n    updatePhoto(photo) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo/`, formData)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    updateData(profile) {\r\n        return instance.put(`profile/`, profile)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n}\r\n\r\nexport const loginAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url')\r\n            .then(response => {\r\n          return response.data\r\n        })\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarComponent\":\"Sidebar_sidebarComponent__39V5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItemComponent\":\"FriendsItem_friendsItemComponent__1ux9u\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.33334fbe.gif\";"],"sourceRoot":""}
{"version":3,"sources":["components/common/FormsControls/FormControls.js","utils/validators/validators.js","components/common/FormsControls/FormControls.module.scss","components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/MessageForm/MessageForm.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControls","Element","input","meta","props","hasError","touched","error","className","classes","formControl","errorMessage","Textarea","Input","required","value","maxLengthCreator","maxLength","length","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","to","Dialog","dialogComponent","id","link","activeClassName","active","src","alt","name","Message","message","maxLength40","MessageReduxForm","reduxForm","form","messageFormComponent","onSubmit","handleSubmit","sendForm","Field","textarea","placeholder","validate","component","type","btn","Dialogs","dialogsArray","dialogs","map","dialog","i","key","messagesArray","messages","dialogsComponent","dialogs__list","messages__list","values","onSendMessage","compose","dialogsPage","newMessage"],"mappings":"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","file":"static/js/6.777b96ce.chunk.js","sourcesContent":["import React from \"react\"\r\nimport classes from \"./FormControls.module.scss\"\r\n\r\n\r\nconst FormControls = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={\r\n            hasError\r\n                ? `${classes.formControl} ${classes.error}`\r\n                : `${classes.formControl}`\r\n        }\r\n        >\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            {hasError\r\n                ? <p className={classes.errorMessage}>{meta.error}</p>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = FormControls(\"textarea\");\r\nexport const Input = FormControls(\"input\");","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__gmpsC\",\"error\":\"FormControls_error__HbhS_\",\"errorMessage\":\"FormControls_errorMessage__2zmCJ\"};","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsComponent\":\"Dialogs_dialogsComponent__oQ9sd\",\"dialogs\":\"Dialogs_dialogs__2qFJK\",\"messages\":\"Dialogs_messages__1msKO\",\"messages__list\":\"Dialogs_messages__list__4EPsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DialogItem_link__2YXWH\",\"active\":\"DialogItem_active__3fAM3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1y0h8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendForm\":\"MessageForm_sendForm__3Numn\",\"textarea\":\"MessageForm_textarea__1rbZQ\",\"btn\":\"MessageForm_btn__8wU4z\"};","import React from \"react\";\r\nimport classes from \"./DialogItem.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <li className={classes.dialogComponent}>\r\n            <NavLink to={`/dialogs/${props.id}`} className={classes.link} activeClassName={classes.active}>\r\n                <img src=\"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\" alt=\"\"/>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Dialog","import React from \"react\";\r\nimport classes from \"./Message.module.scss\"\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <li className={classes.message}>\r\n            <img src=\"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\" alt=\"\"/>\r\n            <p>{props.message}</p>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport classes from \"./MessageForm.module.scss\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength40 = maxLengthCreator(40)\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <div className={classes.messageFormComponent}>\r\n            <form onSubmit={props.handleSubmit} className={classes.sendForm}>\r\n                <Field\r\n                    className={classes.textarea}\r\n                    name={\"message\"}\r\n                    placeholder={\"Enter your message\"}\r\n                    validate={[required,maxLength40]}\r\n                    component={Textarea}/>\r\n                <button type=\"submit\" className={classes.btn}>Send message</button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'message'\r\n})(MessageForm)\r\n\r\nexport default MessageReduxForm","import React from \"react\";\r\nimport classes from \"./Dialogs.module.scss\";\r\nimport Dialog from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport MessageReduxForm from \"./MessageForm/MessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsArray = props.dialogs.map((dialog, i) => {\r\n        return <Dialog key={dialog.id} name={dialog.name} id={dialog.id}/>\r\n    })\r\n\r\n    let messagesArray = props.messages.map((message, i) => {\r\n        return <Message key={message.id}  message={message.message} />\r\n    })\r\n\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.onSendMessage(10, values.message)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogsComponent}>\r\n            <div className={classes.dialogs}>\r\n                <ul className={classes.dialogs__list}>\r\n                    {dialogsArray}\r\n                </ul>\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <ul className={classes.messages__list}>\r\n                    {messagesArray}\r\n                </ul>\r\n                <MessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {onSendMessage} from \"../../redux/reducers/dialogs-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessage: state.dialogsPage.newMessage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            onSendMessage\r\n        }),\r\n    withAuthRedirect //hoc redirect'а (если не авторизован скидывает на логин)\r\n)(Dialogs);"],"sourceRoot":""}